% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imputeTimeSeriesLab.R, R/labFun.R
\name{imputeTimeSeriesLab}
\alias{imputeTimeSeriesLab}
\alias{impTS}
\title{Imputing Time-Series Data}
\usage{
imputeTimeSeriesLab(
  labData,
  idColName,
  labItemColName,
  windowColName,
  valueColName,
  impMethod
)
}
\arguments{
\item{labData}{a file or dataframe of laboratory test data with at least 4 columns about patient ID, lab item, test value and test date, respectively.}

\item{idColName}{the column name that records patient ID in labData.}

\item{labItemColName}{the column name that records lab item in labData. If lab code is combined by multiple columns, then just simply add \code{+} operator between column names, e.g., \code{A + B}.}

\item{windowColName}{the column name that records time window sequence in labData.}

\item{valueColName}{the column name that records lab test value in labData. If there are more than one value column to be imputed, just simply add \code{&} operator between column names, e.g., \code{A & B}, then imputation of multiple columns can be done simultaneously.}

\item{impMethod}{desird imputation method:\code{mean}, \code{interpolation} or \code{nocb}.}
}
\value{
A \code{data.table} with imputed data.
}
\description{
\code{imputeTimeSeriesLab} does imputation for time-series data.
}
\details{
Two imputation methods are provided: \code{mean} or \code{interpolation}. If choosing \code{mean} method, the imputation is based the mean of all other non-null values among all the windows of the specific lab item for certain patient. If \code{interpolation}, the imputation uses linear interpolation method, and other out-of-range null values will be imputed by mean of known values. If \code{nocb}, the imputation method is "next observation carried backward".
}
\examples{

timeSeriesData <- getTimeSeriesLab(labData = labMIMIC,
                                   idColName = SUBJECT_ID,
                                   labItemColName = ITEMID,
                                   dateColName = CHARTTIME,
                                   valueColName = VALUENUM,
                                   indexDate = first,
                                   gapDate = 360,
                                   completeWindows = TRUE)
imputeTimeSeriesLab(labData = timeSeriesData,
                idColName = ID,
                labItemColName = ITEMID,
                windowColName = Window,
                valueColName = Max & Min & Mean & Nearest,
                impMethod = mean)
}
